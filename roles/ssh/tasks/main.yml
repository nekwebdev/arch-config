---
- name: Install OpenSSH
  pacman: name=openssh

- name: Disable some ssh options
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^{{ item }}"
    line: "{{ item }} no"
    state: present
  with_items:
    - PasswordAuthentication
    - PermitRootLogin
    - PermitEmptyPasswords
    - ChallengeResponseAuthentication
    - KerberosAuthentication
    - GSSAPIAuthentication
    - X11Forwarding
    - PermitUserEnvironment

- name: Limit ssh max tries
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^MaxAuthTries"
    line: "MaxAuthTries {{ ssh.max_tries }}"
    state: present

- name: Set ssh grace time
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^LoginGraceTime"
    line: "LoginGraceTime {{ ssh.grace_time }}"
    state: present

- name: Enable and start OpenSSH
  service: name=sshd.service enabled=yes state=started
  when: ssh.enable_sshd is defined and ssh.enable_sshd == True

- name: Disable and stop OpenSSH
  service: name=sshd.service enabled=no state=stopped
  when: ssh.enable_sshd is defined and ssh.enable_sshd == False

- name: Install sshfs
  pacman: name=sshfs

- name: Install autossh
  pacman: name=autossh

- name: Copy fuse configuration file
  copy: src=fuse.conf dest=/etc/fuse.conf

- name: Install keychain
  pacman: name=keychain

- name: Install x11-ask-pass
  pacman: name=x11-ssh-askpass

- name: Export SSH_ASKPASS environment variable
  lineinfile: dest=/etc/profile
    state=present
    line="export SSH_ASKPASS=\"/usr/lib/ssh/x11-ssh-askpass\""

- name: Make directory for user SSH key
  file:
    path: "/home/{{ user.name }}/.ssh"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0700"

- name: Check if the ssh key is present
  stat: path=/home/{{ user.name }}/.ssh/{{ ssh.user_key }}
  register: ssh_key
  when: ssh.user_key is defined

- block:
    - name: Save public key
      shell: "lpass show {{ ssh.user_key }} --field 'Public Key' > /home/{{ user.name }}/.ssh/{{ ssh.user_key }}.pub"

    - name: Save private key
      shell: "lpass show {{ ssh.user_key }} --field 'Private Key' > /home/{{ user.name }}/.ssh/{{ ssh.user_key }}"

    - name: Fix permissions and ownership
      file:
        path: "/home/{{ user.name }}/.ssh/{{ item.name }}"
        owner: "{{ user.name }}"
        group: "{{ user.group }}"
        mode: "{{ item.mode }}"
      with_items:
        - { name: "{{ ssh.user_key }}", mode: "0600" }
        - { name: "{{ ssh.user_key }}.pub", mode: "0644" }

  when: ssh.user_key is defined and not ssh_key.stat.exists
