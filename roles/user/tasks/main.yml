---
# install our user shell first
- include: shell.yml

# create our user
- name: Create user group
  group:
    name: "{{ user.group }}"
    state: present
  tags:
    - user

- name: Create user and assign to group
  user:
    name: "{{ user.name }}"
    group: "{{ user.group }}"
    password: "{{ user_password|password_hash('sha512') }}"
    shell: "{{ user.shell }}"
    update_password: on_create
    uid: "{{ user.uid }}"
    groups: uucp
    append: yes
  tags:
    - user

- name: Create user log dir
  file:
    path: "/home/{{ user.name }}/{{ user.log.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  when: user.log.dir is defined
  tags:
    - user

- name: Install logrotate
  pacman: name=logrotate
  tags:
    - user

- name: Push logrotate config for user logs
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/user
  when: user.log.dir is defined
  tags:
    - user

- name: Create user socket directory
  file:
    path: "/run/user/{{ user.uid }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0700"
  tags:
    - user

- name: Start user systemd instance
  service:
    name: "user@{{ user.uid }}"
    state: started
  notify: stop systemd per-user instance
  tags:
    - user

- name: Create directories for user SSH and gnupg with correct permissions
  file:
    path: "/home/{{ user.name }}/{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: "0700"
  with_items:
    - .ssh
    - .gnupg

- name: Set the global git user name
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ user.gitname }}"
  become: true
  become_user: "{{ user.name }}"

- name: Set the global git user email
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ user.gitemail }}"
  become: true
  become_user: "{{ user.name }}"

- name: Clone wallpapers
  git:
    repo: "{{ wallpapers.url }}"
    dest: "/home/{{ user.name }}/{{ wallpapers.folder }}"
    accept_hostkey: yes
    update: no
  when: wallpapers.url is defined
  become: true
  become_user: "{{ user.name }}"
  

# setup sudo for this user
- include: sudo.yml

# setup our dotfiles
- include: dotfiles.yml

# setup our aur_builder user and install an aur helper
- include: aur_helper.yml
